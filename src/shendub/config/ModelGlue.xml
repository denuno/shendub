<?xml version="1.0" encoding="UTF-8"?>
<modelglue>

<controllers>
	<controller id="Controller" type="shendub.controller.Controller">
	<!-- 
	<message-listener message="message" function="controllerFunction" />
	-->
	</controller>
</controllers>
	
	<event-types>
	<!-- Sample Event Type:
		You can use before, after or both.
		<event-type name="templatedPage">
			<before>
				<results>
					<result do="SomethingThatShouldRunBefore"/>
				</results>
			</before>
			<after>
				<results>
					<result do="SomethingThatShouldRunAfter"/>
				</results>
			</after>		
		</event-type>
	-->
	</event-types>
		
<event-handlers>
	<!-- 
	Sample Event Handler:
	<event-handler name="eventname">
		<broadcasts>
			<message name="message" />
		</broadcasts>
		<results>
			<result name="resultName" do="otherEvent" />
		</results>
		<views>
			<include name="body" template="content.cfm" />
		</views>
	</event-handler> 
	-->
	
	<!-- A homepage for your application. -->
	<event-handler name="page.index">
		<broadcasts />
		<results>
			<result do="template.main" />
		</results>
		<views>
			<include name="body" template="pages/index.cfm" />
		</views>
	</event-handler>

	<!-- An error event to show when an error occurs, much like <cferror>. -->
	<event-handler name="page.error">
		<broadcasts />
		<results>
			<result do="template.main" />
		</results>
		<views>
			<include name="body" template="pages/exception.cfm" />
		</views>
	</event-handler>

	<!-- A "404" event to show when the requested event isn't defined. -->
	<event-handler name="page.missing">
		<broadcasts />
		<results>
			<result do="template.main" />
		</results>
		<views>
			<include name="body" template="pages/missingEvent.cfm" />
		</views>
	</event-handler>
	
	<!-- Private events:  can't be accessed through a URL -->
	<event-handler access="private" name="template.main">
		<views>
			<include name="main" template="templates/main.cfm" />
		</views>
	</event-handler>
</event-handlers>
	
</modelglue>

